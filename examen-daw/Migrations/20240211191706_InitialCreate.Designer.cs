// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using examen_daw.ContextModels;

#nullable disable

namespace examen_daw.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240211191706_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("examen_daw.Models.Film", b =>
                {
                    b.Property<int>("Filmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Filmid"));

                    b.Property<int>("An")
                        .HasColumnType("int");

                    b.Property<string>("Gen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titlu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Filmid");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("examen_daw.Models.Recenzie", b =>
                {
                    b.Property<int>("RecenzieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzieId"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("RecenzieId");

                    b.HasIndex("FilmId");

                    b.ToTable("Recenzii");
                });

            modelBuilder.Entity("examen_daw.Models.Recenzie", b =>
                {
                    b.HasOne("examen_daw.Models.Film", "Film")
                        .WithMany("Recenzii")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("examen_daw.Models.Film", b =>
                {
                    b.Navigation("Recenzii");
                });
#pragma warning restore 612, 618
        }
    }
}
